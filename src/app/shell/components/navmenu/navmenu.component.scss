.top-nav {
  background-color: var(--dark-blue);
  width: 100%;
  height: 7vh;
  display: flex;
  align-items: center;
  position: relative;
  top: 0;
  left: 0;
  z-index: 1000;
  box-shadow: 0 2px 5px rgba(60, 50, 109, 0.543);
  perspective: 700px;

  * {
    box-sizing: border-box;
    transform-style: preserve-3d;
  }

  .nav-container {
    width: 100%;
    display: flex;
    justify-content: space-around;
    transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); // Enhanced timing function from (1)
  }

  .logo-container {
    cursor: pointer;
    display: flex;
    align-items: center;
    transition: transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); // Added from (1)

    &:hover {
      transform: translateZ(10px); // Simple 3D effect
    }

    .logo {
      width: clamp(24px, 3vw, 36px); // Min:24px, Default:3vw, Max:36px
      height: clamp(24px, 3vw, 36px); // Prevents extreme scaling
      transition: all 0.3s ease; // Smooth resizing
      margin-right: 0.5rem;
    }

    h4 {
      color: white;
      font-size: clamp(1rem, 1.5vw, 1.25rem); // Responsive text
      white-space: nowrap; // Prevents text wrapping
    }
  }

  .navbar-menu-items {
    display: flex;

    .menu-item {
      display: flex;
      align-items: center;
      padding: 0.3rem 1rem;
      margin: 0.2rem;
      height: 100%;
      border-radius: 0.6rem;
      cursor: pointer;
      text-decoration: none;
      position: relative;
      transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
      color: white !important;

      .item span {
        color: inherit !important;
        opacity: 0.7;
      }

      // Active state - when [class.active]="item.active" is true
      &.active {
        background: rgba(255, 255, 255, 0.15);

        // Animated underline effect
        &::after {
          content: "";
          position: absolute;
          bottom: 10%;
          left: 50%;
          transform: translateX(-50%);
          width: 60%;
          height: 2px;
          background: var(--active-color, #4e54c8);
          animation: underlineFadeIn 300ms ease-out;
        }

        .item {
          span {
            color: var(--active-text-color, #fff);
            text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);
          }

          // If you're using icons
          mat-icon,
          .icon {
            transform: scale(1.1);
            filter: brightness(1.2);
          }
        }
      }

      // Disabled state
      &.disabled {
        cursor: not-allowed;
        opacity: 0.4;
        pointer-events: none;
        color: white;
      }

      // Hover state (excluding disabled items)
      &:not(.disabled):hover {
        background: rgba(255, 255, 255, 0.1);
        transform: translateY(-1px);
      }

      // Item container
      .item {
        display: flex;
        align-items: center;
        height: 100%;

        span {
          margin-left: 8px;
          font-size: 0.8rem;
          font-weight: 600;
          white-space: nowrap;
          transition: all 200ms ease;
        }
      }

      // Animation for active state
      @keyframes underlineFadeIn {
        from {
          width: 0%;
          opacity: 0;
        }
        to {
          width: 60%;
          opacity: 1;
        }
      }

      .submenu-icon {
        margin-left: 5px;
        transition: transform 0.2s ease;

        &.open {
          transform: rotate(180deg);
        }
      }
    }

    .sub-menu-items {
      position: absolute;
      top: 100%;
      left: 0;
      background-color: var(--deep-gray);
      min-width: 200px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
      z-index: 100;
      transform: translateY(-10%) translateZ(-5px); // Added 3D effect from (1)
      transform-origin: top center;
      transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); // Enhanced from (1)

      li {
        padding: 10px 15px;
        transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); // Enhanced from (1)
        transform: rotateX(-15deg); // Added 3D effect

        &:hover {
          background-color: rgba(255, 255, 255, 0.08);
          transform: rotateX(0deg) translateZ(5px); // Enhanced hover effect
        }

        &.disabled {
          cursor: not-allowed !important;
          opacity: 0.3 !important;
        }

        a {
          display: flex;
          align-items: center;
          color: var(--nav-menu-icon-color);
          text-decoration: none;

          span {
            margin-left: 8px;
            font-size: 14px;
            font-weight: 600;
          }

          &.active {
            color: var(--gray-400);
          }
        }
      }
    }

    &:hover .sub-menu-items {
      transform: translateY(0) translateZ(0); // Better dropdown animation
      li {
        transform: rotateX(0deg);
      }
    }
  }
}

// Mobile adaptation from (1)
@media (max-width: 666px) {
  .top-nav {
    .navbar-menu-items {
      position: fixed;
      top: 60px;
      left: 0;
      width: 100%;
      background: var(--deep-gray);
      flex-direction: column;
      height: auto;
      max-height: 0;
      overflow: hidden;
      transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);

      .menu-item-container {
        width: 100%;
        height: auto;
        padding: 15px 0;

        .sub-menu-items {
          position: relative;
          box-shadow: none;
          transform: none !important;

          li {
            transform: none !important;
            padding-left: 30px;
          }
        }
      }
    }

    // Hamburger menu toggle (from (1))
    &.mobile-open {
      .navbar-menu-items {
        max-height: 100vh;
        padding: 20px 0;
      }
    }
  }
}

.divider {
  display: block;
  height: 1px;
  background: linear-gradient(270deg, rgba(97, 98, 100, 0) 0%, #616264 51.38%, rgba(97, 98, 100, 0) 100%);
}

.auth-box {
  display: flex;
  align-items: center;
  gap: 0.1rem;
  margin-left: 2rem;

  .auth-item {
    display: flex;
    align-items: center;
    padding: 0.3rem 0.15rem;
    height: 100%;
    border-radius: 0.6rem;
    cursor: pointer;
    text-decoration: none;
    position: relative;
    transition: all 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    color: white;
    opacity: 0.7;
    font-size: 0.68rem;
    white-space: nowrap;

    // Add underline on hover using ::after
    &::after {
      content: "";
      position: absolute;
      bottom: 10%;
      left: 50%;
      transform: translateX(-50%);
      width: 0%;
      height: 2px;
      background: var(--active-color, #4e54c8);
      transition: width 300ms ease;
      opacity: 0;
    }

    &:hover {
      transform: translateY(-1px);
      opacity: 1;

      &::after {
        width: 60%;
        opacity: 1;
      }
    }

    &.active {
      &::after {
        width: 60%;
        opacity: 1;
        animation: underlineFadeIn 300ms ease-out;
      }
    }
  }
}
